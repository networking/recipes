{
  "manifests": {
    "networking/init-cms-bundle": {
      "manifest": {
        "bundles": {
          "Networking\\InitCmsBundle\\NetworkingInitCmsBundle": [
            "all"
          ]
        },
        "copy-from-recipe": {
          "config/": "%CONFIG_DIR%/",
          "serializer/": "%CONFIG_DIR%/serializer/",
          "src/": "%SRC_DIR%/"
        },
        "env": {
          "LOCALE": "en",
          "DATABASE_DRIVER": "mysql"
        },
        "composer-scripts": {
          "ckeditor:install": "symfony-cmd"
        },
        "post-install-output": [
          "  * The <fg=blue>InitCmsBundle</> imports many configuration files, such as doctrine.yaml, security.yaml etc. In order",
          "  to ensure your app will work please do the following:",
          "    1. Check that all files imported via the networking_init_cms.yaml file are not overwritten with a similar",
          "       configuration file in your /config/packages folder. !IMPORTANT the doctrine.yaml and security.yaml must be either",
          "       deleted, or update/extended with the configuration as proposed in the doctrine.yaml and security.yaml files",
          "       included with the CMS.",
          "    2. Check that the Page and User entities were copied to the correct entity folder, and are configured correctly.",
          "    3. Configure your languages in the networking_init_cms.yaml file, for multi-language support.",
          "    4. Configure the lexik translation bundles fallback_local and managed_locales parameters to support DB based translations.",
          "    5. Clear the cache again so that the new config files are loaded correctly.",
          "    6. Check your database configuration, and back up your database if you haven't done so already.",
          "    7. Update your database <fg=blue>bin/console doctrine:schema:update</> or using the doctrine migrate commands",
          "    8. Use the command networking:initcms:install to install the DB install fixtures and create a superuser admin.",
          "       ALTERNATIVELY you can use the networking:initcms:data-setup if you just want to install the data structure and fixtures",
          "    9. Enable or disable full page caching by setting networking_init_cms.cache.activate to true/false"
        ]
      },
      "files": {
        "config/packages/dev/networking_init_cms.yaml": {
          "contents": [
            "networking_init_cms:",
            "    cache:",
            "        activate: false",
            ""
          ],
          "executable": false
        },
        "config/packages/networking_init_cms.yaml": {
          "contents": [
            "imports:",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/assets.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/doctrine.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/fos_ck_editor.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/jms_serializer.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/networking_bootstrap.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/oneup_flysystem.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/oneup_uploader.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/sonata_admin.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/sonata_block.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/sonata_doctrine_admin.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/sonata_media.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/sonata_user.yaml\" }",
            "    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/symfony_cmf_routing_extra.yaml\" }",
            "# Default security configuration",
            "#    - { resource: \"@NetworkingInitCmsBundle/Resources/config/cms/security.yaml\" }",
            "",
            "# Set up the serializer to read config file for App Page and User entities",
            "jms_serializer:",
            "    metadata:",
            "        directories:",
            "            NetworkingSonataMediaBundle:",
            "                namespace_prefix: \"Sonata\\\\MediaBundle\"",
            "                path: \"@NetworkingInitCmsBundle/Resources/config/serializer\"",
            "            app:",
            "                namespace_prefix: \"App\"",
            "                path: \"%kernel.project_dir%/config/serializer\"",
            "",
            "",
            "networking_init_cms:",
            "    #Base classes to be used for the page and user entities",
            "    class:",
            "        page: \"App\\\\Entity\\\\Page\"",
            "        user: \"App\\\\Entity\\\\User\"",
            "",
            "    # Bootstrap some template settings to get you started",
            "    templates:",
            "        'app_single_column':",
            "            template: \"@NetworkingInitCms/sandbox/page/one_column.html.twig\"",
            "            name: \"Single Column\"",
            "            icon: \"bundles/networkinginitcms/img/template_header_one_column.png\"",
            "            zones:",
            "                - { name: header, class: 'col-md-12' }",
            "                - { name: main_content, class: 'col-md-12'}",
            "        'app_two_column':",
            "            template: \"@NetworkingInitCms/sandbox/page/two_column.html.twig\"",
            "            name: \"Two Column\"",
            "            icon: \"bundles/networkinginitcms/img/template_header_two_column.png\"",
            "            zones:",
            "                - { name: header , class: 'col-md-12'}",
            "                - { name: left , class: 'col-md-3'}",
            "                - { name: right , class: 'col-md-9'}",
            "    cache:",
            "        activate: true #enable for product, false in dev config",
            "",
            "    # For more information regarding configuration of the CMS Bundle, please visit the following documentation",
            "    # https://github.com/networking/init-cms-bundle/blob/master/doc/configuration.md",
            ""
          ],
          "executable": false
        },
        "config/routes/networking_init_cms.yaml": {
          "contents": [
            "networking_init_cms:",
            "    resource: \"@NetworkingInitCmsBundle/Resources/config/routing/routing.yaml\"",
            "    prefix:   /",
            ""
          ],
          "executable": false
        },
        "serializer/Entity.Page.yaml": {
          "contents": [
            "App\\Entity\\Page:",
            "    properties:",
            "        id:",
            "            type: integer",
            "        createdAt:",
            "            type: DateTime",
            "        updatedAt:",
            "            type: DateTime",
            "        pageName:",
            "            type: string",
            "        metaTitle:",
            "            type: string",
            "        url:",
            "            type: string",
            "        path:",
            "            type: string",
            "        level:",
            "            type: integer",
            "        metaKeyword:",
            "            type: string",
            "        metaDescription:",
            "            type: string",
            "        parent:",
            "            accessor:",
            "                getter: convertParentToInteger",
            "            type: integer",
            "        alias:",
            "            accessor:",
            "                getter: convertAliasToInteger",
            "            type: integer",
            "        parents:",
            "            accessor:",
            "                getter: convertParentsToArray",
            "            type: array",
            "        children:",
            "            accessor:",
            "                getter: convertChildrenToIntegerArray",
            "            type: array",
            "        allChildren:",
            "            exclude: true",
            "        layoutBlock:",
            "            type: ArrayCollection<Networking\\InitCmsBundle\\Entity\\LayoutBlock>",
            "        menuItem:",
            "            exclude: true",
            "            accessor:",
            "                getter: prepareMenuItemsForSerialization",
            "            type: ArrayCollection<Networking\\InitCmsBundle\\Entity\\MenuItem>",
            "        isHome:",
            "            type: boolean",
            "        status:",
            "            type: string",
            "        visibility:",
            "            type: string",
            "        activeFrom:",
            "            type: DateTime",
            "        activeTo:",
            "            type: DateTime",
            "        locale:",
            "            type: string",
            "        translations:",
            "            accessor:",
            "                getter: convertTranslationsToIntegerArray",
            "            type: array",
            "        originals:",
            "            accessor:",
            "                getter: convertOriginalsToIntegerArray",
            "            type: array",
            "        snapshots:",
            "            exclude: true",
            "        snapshotClassType:",
            "            type: string",
            "        oldTitle:",
            "            exclude: true",
            "        tags:",
            "            exclude: true",
            "        contentRoute:",
            "            exclude: true",
            ""
          ],
          "executable": false
        },
        "src/Entity/Page.php": {
          "contents": [
            "<?php",
            "namespace App\\Entity;",
            "",
            "use Doctrine\\Common\\Collections\\Collection;",
            "use Gedmo\\Mapping\\Annotation as Gedmo;",
            "use Networking\\InitCmsBundle\\Entity\\BasePage;",
            "use Doctrine\\ORM\\Mapping as ORM;",
            "use Networking\\InitCmsBundle\\Model\\ContentRoute;",
            "",
            " #[ORM\\Entity()]",
            " #[ORM\\Table(name: 'page', uniqueConstraints: [])]",
            " #[ORM\\UniqueConstraint(name: 'path_idx', columns: ['path', 'locale'])]",
            " #[ORM\\HasLifecycleCallbacks()]",
            " #[Gedmo\\Loggable]",
            " #[Gedmo\\Tree(type: 'materializedPath')]",
            "class Page extends BasePage{",
            "",
            "    #[ORM\\Column(type: 'integer')]",
            "    #[ORM\\Id]",
            "    #[ORM\\GeneratedValue(strategy: 'IDENTITY')]",
            "    protected $id;",
            "",
            "    #[ORM\\OneToOne(targetEntity: \\Networking\\InitCmsBundle\\Entity\\ContentRoute::class, cascade: ['remove', 'persist'])]",
            "    #[ORM\\JoinColumn(name: 'content_route_id', referencedColumnName: 'id')]",
            "    protected ?ContentRouteInterface $contentRoute;",
            "",
            "    #[ORM\\OneToMany(mappedBy: 'page', targetEntity: \\Networking\\InitCmsBundle\\Entity\\LayoutBlock::class, cascade: ['remove', 'persist'], orphanRemoval: true)]",
            "    #[ORM\\OrderBy(['sortOrder' => 'ASC'])]",
            "    protected Collection $layoutBlock;",
            "",
            "    #[ORM\\OneToMany(mappedBy: 'page', targetEntity: \\Networking\\InitCmsBundle\\Entity\\MenuItem::class, cascade: ['remove'], orphanRemoval: true)]",
            "    protected Collection $menuItem;",
            "",
            "    #[ORM\\OneToMany(mappedBy: 'page', targetEntity: \\Networking\\InitCmsBundle\\Entity\\PageSnapshot::class, cascade: ['remove'], orphanRemoval: true)]",
            "    #[ORM\\OrderBy(['version' => 'DESC'])]",
            "    protected Collection $snapshots;",
            "",
            "    #[ORM\\OneToMany(mappedBy: 'parent', targetEntity: \\App\\Entity\\Page::class)]",
            "    protected Collection|array $children;",
            "",
            "    #[ORM\\ManyToOne(targetEntity: \\App\\Entity\\Page::class)]",
            "    #[ORM\\JoinColumn(name: 'alias_id', referencedColumnName: 'id', onDelete: 'SET NULL')]",
            "    protected ?PageInterface $alias;",
            "",
            "    #[ORM\\ManyToOne(targetEntity: \\App\\Entity\\Page::class, cascade: ['persist'], inversedBy: 'children')]",
            "    #[ORM\\JoinColumn(name: 'parent_id', referencedColumnName: 'id', onDelete: 'SET NULL')]",
            "    #[Gedmo\\TreeParent]",
            "    protected PageInterface|int|null $parent;",
            "",
            "    #[ORM\\ManyToMany(targetEntity: \\App\\Entity\\Page::class, inversedBy: 'translations', cascade: ['persist'])]",
            "    #[ORM\\JoinTable(name: 'page_translation')]",
            "    #[ORM\\JoinColumn(name: 'translation_id', referencedColumnName: 'id')]",
            "    #[ORM\\InverseJoinColumn(name: 'original_id', referencedColumnName: 'id')]",
            "    protected Collection|array $originals;",
            "",
            "    #[ORM\\ManyToMany(targetEntity: \\App\\Entity\\Page::class, mappedBy: 'originals', cascade: ['persist'])]",
            "    protected Collection|array $translations;",
            "}",
            ""
          ],
          "executable": false
        },
        "src/Entity/User.php": {
          "contents": [
            "<?php",
            "",
            "namespace App\\Entity;",
            "",
            "use Networking\\InitCmsBundle\\Entity\\BaseUser;",
            "use Networking\\InitCmsBundle\\Entity\\Group;",
            "use Doctrine\\ORM\\Mapping as ORM;",
            "",
            "/**",
            " * User",
            " *",
            " */",
            "#[ORM\\Table(name: 'user')]",
            "#[ORM\\Entity]",
            "class User extends BaseUser{",
            "",
            "    #[ORM\\Column(name: 'id', type: 'integer')]",
            "    #[ORM\\Id]",
            "    #[ORM\\GeneratedValue(strategy: 'AUTO')]",
            "    protected $id;",
            "",
            "    #[ORM\\Column(name: 'admin_settings', type: 'json', nullable: true)]",
            "    protected $adminSettings;",
            "",
            "    #[ORM\\Column(name: 'locale', type: 'string', length: 6, nullable: true)]",
            "    protected ?string $locale;",
            "",
            "    #[ORM\\Column(name: 'firstname', type: 'string', length: 255, nullable: true)]",
            "    protected ?string $firstname;",
            "",
            "    #[ORM\\Column(name: 'lastname', type: 'string', length: 255, nullable: true)]",
            "    protected ?string $lastname;",
            "",
            "    #[ORM\\Column(name: 'two_step_code', type: 'string', length: 255, nullable: true)]",
            "    protected ?string $twoStepVerificationCode;",
            "",
            "    #[ORM\\ManyToMany(targetEntity: Group::class)]",
            "    #[ORM\\JoinTable(name: 'user_user_group')]",
            "    #[ORM\\JoinColumn(name: 'user_id', referencedColumnName: 'id', onDelete: 'CASCADE')]",
            "    #[ORM\\InverseJoinColumn(name: 'group_id', referencedColumnName: 'id', onDelete: 'CASCADE')]",
            "    protected array|\\Doctrine\\Common\\Collections\\Collection $groups = [];",
            "",
            "}",
            ""
          ],
          "executable": false
        }
      },
      "ref": "bb2ea6157d272e7910c2c304d1693f4a3cd32a39"
    }
  }
}